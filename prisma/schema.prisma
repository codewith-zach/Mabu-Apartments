// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RoomType {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String
  price       Float
  capacity    Int
  imageUrl    String
  images     String[]
  rooms       Room[]
}

model Room {
  id           String         @id @default(cuid())
  roomType     RoomType       @relation(fields: [roomTypeId], references: [id])
  roomTypeId   String
  roomNumber   String         @unique
  bookings     Booking[]
  availability Availability[]
  reviews      Review[]
}

model Booking {
  id               String   @id @default(cuid())
  roomId           String
  room             Room     @relation(fields: [roomId], references: [id])
  guestName        String
  guestEmail       String
  checkIn          DateTime
  checkOut         DateTime
  totalPrice       Float
  paymentStatus    String
  paymentReference String?  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Availability {
  id          String   @id @default(cuid())
  roomId      String
  room        Room     @relation(fields: [roomId], references: [id])
  date        DateTime
  isAvailable Boolean

  @@unique([roomId, date])
}

model Review {
  id        String   @id @default(cuid())
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  name      String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
}



